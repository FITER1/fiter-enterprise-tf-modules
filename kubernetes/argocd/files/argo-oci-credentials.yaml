apiVersion: batch/v1
kind: CronJob
metadata:
  name: ${oci_repository}-credentials-sync
  namespace: argocd
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - command:
            - /bin/bash
            - -ce
            - |-
              cat <<EOF | kubectl apply -f -
              apiVersion: v1
              kind: Secret
              metadata:
                name: ${oci_repository}-credentials
                namespace: argocd
                labels:
                  argocd.argoproj.io/secret-type: repository
              stringData:
                username: AWS
                password: $(</token/ecr-token)
                enableOCI: "true"
                name: "ECR"
                type: "helm"
                url: "${account_id}.dkr.ecr.${region}.amazonaws.com/${oci_repository}"
              EOF
            image: bitnami/kubectl
            imagePullPolicy: IfNotPresent
            name: create-secret
            volumeMounts:
            - mountPath: /token
              name: token
          dnsPolicy: ClusterFirst
          initContainers:
          - command:
            - /bin/sh
            - -ce
            - aws ecr get-login-password --region ${region} > /token/ecr-token
            image: amazon/aws-cli
            imagePullPolicy: IfNotPresent
            name: get-token
            volumeMounts:
            - mountPath: /token
              name: token
          serviceAccount: ecr-credentials-sync
          serviceAccountName: ecr-credentials-sync
          terminationGracePeriodSeconds: 30
          volumes:
          - emptyDir:
              medium: Memory
            name: token
  schedule: '* */12 * * *'
  successfulJobsHistoryLimit: 1
  suspend: false
